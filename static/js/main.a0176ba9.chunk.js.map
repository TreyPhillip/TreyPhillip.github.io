{"version":3,"sources":["components/Sidebar/Sidebar.js","components/Home/Home.js","components/Projects/ProjectCard/ProjectCard.js","components/Projects/ProjectList/ProjectList.js","components/Projects/BuildCard/BuildCard.js","components/Projects/BuildList/BuildList.js","components/images/VisualizerImage1.jpg","components/images/DiceImage1.jpg","components/images/PortfolioImage1.jpg","components/Projects/Projects.js","components/About/About.js","components/Contact/Contact.js","components/Projects/ProjectDetail/DiceBot/DiceBot.js","components/Projects/ProjectDetail/Pathfinder/Pathfinder.js","components/Projects/ProjectDetail/Portfolio/Portfolio.js","components/Services/Services.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","props","state","collapsed","toggled","className","this","breakPoint","onToggle","handleToggleSidebar","onClick","style","padding","textTransform","fontWeight","fontSize","letterSpacing","overflow","textOverflow","whiteSpace","iconShape","icon","to","Component","Home","useStyles","makeStyles","theme","root","maxWidth","minHeight","maxHeight","backgroundColor","media","height","control","spacing","ProjectCard","classes","Card","CardActionArea","project","url","CardMedia","component","image","title","CardContent","Typography","gutterBottom","variant","color","description","CardActions","href","github","rel","target","Button","size","label","withWidth","screenWidth","cols","width","isWidthUp","Container","GridList","cellHeight","map","GridListTile","fullwidth","projectid","BuildCard","build","price","buildid","Projects","useState","projects","setProjects","builds","setBuilds","swapped","setSwapped","swapper","useEffect","VisualizerImage1","DiceImage1","PortfolioImage1","pcpp","disabled","About","Contact","email","twitter","linkedin","DiceBot","PathFinder","Services","App","setToggled","setCollapsed","handleToggleSidebarMobile","value","basename","process","Helmet","charSet","name","content","path","exact","Pathfinder","Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0176ba9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ProSidebar,\r\n    Menu,\r\n    MenuItem,\r\n    SidebarHeader,\r\n    SidebarContent,\r\n} from 'react-pro-sidebar';\r\nimport { FaWrench, FaBars, FaInfo, FaHome, FaEnvelope, FaShoppingCart } from 'react-icons/fa';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        collapsed: this.props.collapsed,\r\n        toggled: this.props.toggled,\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`app  ${this.state.toggled ? 'toggled' : ''}`}>\r\n            <ProSidebar\r\n                collapsed={this.props.collapsed}\r\n                toggled={this.props.toggled}\r\n                breakPoint=\"md\"\r\n                onToggle={this.props.handleToggleSidebar}\r\n            >\r\n                <SidebarHeader onClick={() => this.props.handleToggleSidebar(this.props.toggled)}>\r\n                <div\r\n                    style={{\r\n                    padding: '30px',\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 14,\r\n                    letterSpacing: '1px',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    }}>\r\n                    <FaBars onClick={() => this.props.handleToggleSidebar(true)} />\r\n                </div>\r\n                </SidebarHeader>\r\n                    <SidebarContent>\r\n                        <Menu iconShape=\"circle\">\r\n                            <MenuItem icon={<FaHome />}>\r\n                                Home\r\n                                <Link to=\"/\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaInfo />}> \r\n                                About me\r\n                                <Link to=\"/About\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaWrench />}> \r\n                                Projects\r\n                                <Link to=\"/Projects\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaShoppingCart />}> \r\n                                Services\r\n                                <Link to=\"/Services\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaEnvelope />}> \r\n                                Contact Me\r\n                                <Link to=\"/Contact\"></Link>\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </SidebarContent>             \r\n                </ProSidebar>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <main>\r\n            <header className=\"intro\">\r\n                <h1>Hi, I'm Trey. A junior developer</h1>\r\n            </header>\r\n        </main>\r\n    );\r\n};","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles ((theme)=> ({\r\n  root: {\r\n    maxWidth: 375,\r\n    minHeight: 375,\r\n    maxHeight: 375,\r\n    backgroundColor: \"white\"\r\n  },\r\n  media: {\r\n    height: 340,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function ProjectCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <Link to={props.project.url}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"150\"\r\n              image={props.project.image}\r\n              title=\"\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {props.project.title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {props.project.description}                 \r\n              </Typography>\r\n            </CardContent>\r\n          </Link>\r\n        </CardActionArea>\r\n        <CardActions>\r\n        <a href={props.project.github} rel=\"noopener noreferrer\" target=\"_blank\">         \r\n          <Button size=\"small\" color=\"primary\" label=\"GitHub\">\r\n            GitHub\r\n          </Button>\r\n        </a>\r\n        </CardActions>\r\n      </Card>\r\n  );\r\n}","import React from 'react';\r\nimport ProjectCard  from '../ProjectCard/ProjectCard';\r\nimport { Container } from \"reactstrap\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\n\r\nconst ProjectList = props => {\r\n    function getCols(screenWidth) {\r\n        if (isWidthUp('xl', screenWidth)) {\r\n            return 5;\r\n        }\r\n        if (isWidthUp('lg', screenWidth)) {\r\n            return 4;\r\n        }\r\n        if (isWidthUp('md', screenWidth)) {\r\n            return 3;\r\n        }\r\n        if (isWidthUp('sm', screenWidth)) {\r\n            return 2;\r\n        }\r\n        if (isWidthUp('xs', screenWidth)) {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    const cols = getCols(props.width);\r\n    return(\r\n        <div>\r\n            <Container className=\"project-list\">\r\n                <GridList cellHeight={460} cols={cols} spacing={15}>\r\n                    {props.project.map((project) =>\r\n                    <GridListTile key={project.projectid}  fullwidth=\"true\" className=\"project-tile\">\r\n                        <ProjectCard project={project} />\r\n                    </GridListTile>\r\n                    )} \r\n                </GridList>\r\n            </Container> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withWidth()(ProjectList)","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n    const useStyles = makeStyles ((theme)=> ({\r\n        root: {\r\n            maxWidth: 375,\r\n            minHeight: 375,\r\n            maxHeight: 375,\r\n            backgroundColor: \"white\"\r\n        },\r\n            media: {\r\n                height: 340,\r\n        },\r\n        control: {\r\n            padding: theme.spacing(2),\r\n        },\r\n    }));\r\n\r\n    export default function BuildCard(props) {\r\n        const classes = useStyles();\r\n\r\n        return (\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    {/* <CardMedia\r\n                        component=\"img\"\r\n                        height=\"300\"\r\n                        image={props.build.image}\r\n                        title=\"\"\r\n                    /> */}\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Total Cost: {props.build.price} <br /> <br />\r\n                            Pictures coming soon\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n    }","import React from 'react';\r\nimport BuildCard  from '../BuildCard/BuildCard';\r\nimport { Container } from \"reactstrap\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BuildList = props => {\r\n    function getCols(screenWidth) {\r\n        if (isWidthUp('xl', screenWidth)) {\r\n            return 5;\r\n        }\r\n        if (isWidthUp('lg', screenWidth)) {\r\n            return 4;\r\n        }\r\n        if (isWidthUp('md', screenWidth)) {\r\n            return 3;\r\n        }\r\n        if (isWidthUp('sm', screenWidth)) {\r\n            return 2;\r\n        }\r\n        if (isWidthUp('xs', screenWidth)) {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    const cols = getCols(props.width);\r\n    return(\r\n        <div>\r\n            <Container className=\"project-list\">\r\n                <GridList cellHeight={460} cols={cols} spacing={15}>\r\n                    {props.build.map((build) =>\r\n                    <GridListTile key={build.buildid}  fullwidth=\"true\" className=\"project-tile\">\r\n                        <Link to=''>\r\n                            <BuildCard build={build} />\r\n                        </Link>\r\n                    </GridListTile>\r\n                    )} \r\n                </GridList>\r\n            </Container> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withWidth()(BuildList)","export default __webpack_public_path__ + \"static/media/VisualizerImage1.4664219a.jpg\";","export default __webpack_public_path__ + \"static/media/DiceImage1.90ffd511.jpg\";","export default __webpack_public_path__ + \"static/media/PortfolioImage1.98e0ba73.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport ProjectList from './ProjectList/ProjectList';\r\nimport BuildList from './BuildList/BuildList';\r\nimport VisualizerImage1 from '../images/VisualizerImage1.jpg';\r\nimport DiceImage1 from '../images/DiceImage1.jpg';\r\nimport PortfolioImage1 from '../images/PortfolioImage1.jpg';\r\n\r\n\r\nexport default function Projects() {   \r\n    const DiceDescription = 'Discord bot developed using JavaScript and the Discord.js node module';\r\n    const PathfindingDescription = 'Pathfinding Visualizer in Python using the A* algorithm';\r\n    const PortfolioDescription = 'A website that acts as my portfolio. The website you\\'re on right now!';\r\n    \r\n    const [projects, setProjects] = useState([]);\r\n    const [builds, setBuilds] = useState([]);\r\n    const [swapped, setSwapped] = useState(true);\r\n\r\n    const swapper = () => {\r\n        setSwapped(!swapped)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setProjects([\r\n            {projectid: '1', title: 'Path-finding Visualizer', description: PathfindingDescription, image: VisualizerImage1, github: 'https://github.com/TreyPhillip/PathfindingVisualizer', url: '/Projects/Pathfinder'},\r\n            {projectid: '2', title: 'MrDiceGuy', description: DiceDescription, image: DiceImage1, github: 'https://github.com/TreyPhillip/MrDiceGuy', url: '/Projects/DiceBot'},\r\n            {projectid: '3', title: 'My Porfolio', description: PortfolioDescription, image: PortfolioImage1, github: 'https://github.com/TreyPhillip/TreyPhillip.github.io', url: '/Projects/Portfolio'},\r\n        ])\r\n        setBuilds([\r\n            {buildid: '1', title: 'My Personal Build', image: \"\", url: '/Builds/Personal', price: '$1,454.87 CAD', pcpp: ''},\r\n            {buildid: '2', title: 'Mid Range PC', image: \"\", url: '/Builds/', price: '$1,489.98 CAD', pcpp: ''},\r\n            {buildid: '3', title: 'Budget PC', image: \"\", url: '/Builds/', price: '$739.31 CAD', pcpp: ''},\r\n        ])\r\n    }, [])\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>Stuff I've Done &nbsp;&nbsp;&nbsp;\r\n                    <button \r\n                        onClick={swapper} \r\n                        disabled={swapped} \r\n                        className=\"swapper\">\r\n                        Projects\r\n                    </button>\r\n                    <button \r\n                        onClick={swapper} \r\n                        disabled={!swapped}\r\n                        className=\"swapper\">\r\n                        Builds\r\n                    </button>\r\n                </h1>\r\n            </header>\r\n            {swapped ? \r\n                <div className=\"projects\">\r\n                    <ProjectList project={projects} />\r\n                </div>\r\n            :\r\n                <div className=\"projects\">\r\n                    <BuildList build={builds} />\r\n                </div>\r\n            }\r\n        </main>                    \r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>About Me</h1>\r\n            </header>      \r\n            <p className=\"block\">\r\n                I live in Ontario, Canada and I recently graduated from Conestoga College with an Ontario College\r\n                Advanced Diploma in Computer Science & IT. Since my graduation I have spent my time learning new \r\n                technologies and looking for employment.\r\n            </p>\r\n            <header className=\"head\">\r\n                <h2>Education</h2>\r\n            </header>\r\n            <p className=\"block\">\r\n                My education focused on hands on work with a variety of languages and frameworks.Many of my classes \r\n                used C# to teach the computer science concepts, but I also had classes on other languages like JavaScript.\r\n                I am self taught in a number of other areas such as React and Python.\r\n            </p>\r\n            <header className=\"head\">\r\n                <h2>Skills</h2>\r\n            </header>\r\n            <p className=\"block\">\r\n                I am most confident in my skills for Web design and utilizing technologies such as React.js and\r\n                Node.js. However, I am also proficient in other fields like Application and Database design. I have\r\n                yet to gain any professional experience in these technologies, but I am confident in my ability to \r\n                perform regardless\r\n            </p>\r\n        </main>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function Contact() {\r\n    const email = <a href={\"mailto: treyphillip@live.com\"}>treyphillip@live.com</a>;\r\n    const twitter = <a href={\"https://twitter.com/RealTreyPhillip\"}>Twitter</a>;\r\n    const linkedin = <a href={\"https://www.linkedin.com/in/treyphillip/\"}>LinkedIn</a>;\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>Contact Me</h1>\r\n            </header>\r\n            <p className=\"block\"> \r\n                I am currently interested in full time or short term/freelance work.\r\n                I do a veriety of different programming work such as Web development or \r\n                Application Development. I also do work building PCs.\r\n                If you are interested, please send me a message on one of the platforms below.\r\n                <br />\r\n                <br />\r\n                {email}\r\n                <br />\r\n                <br />\r\n                {twitter}\r\n                <br />\r\n                <br />\r\n                {linkedin}\r\n            </p>\r\n        </main>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function DiceBot() {\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>What is Mr Dice Guy?</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                Mr Dice Guy is a discord chatbot made with the intention\r\n                of being used for tabletop roleplaying games like Dungeons & Dragons. It was developed \r\n                using JavaScript and the Discord.js node module. Currently MrDiceGuy is not hosted anywhere, \r\n                but can be used locally and added to your discord servers through the developer portal\r\n            </p>\r\n            <header className=\"head\">\r\n                <h1>Commands</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                Roll single dice\r\n                <pre className=\"code-snippet\">\r\n                    <code>\r\n                        !d20<br />\r\n                        # 16<br />\r\n                        details: d6\r\n                    </code>\r\n                </pre>\r\n                Roll Multiple Dice\r\n                <pre className=\"code-snippet\">\r\n                    <code>\r\n                        !2d20<br />\r\n                        # 28<br />\r\n                        details: 2d20<br />\r\n                        12 16\r\n                    </code>\r\n                </pre>\r\n                Use ++ or -- to add or subract from each dice roll instead of just the total. \r\n                this only works if you are rolling multiple dice at the same time\r\n                <pre className=\"code-snippet\">\r\n                    <code>\r\n                        !10d6++7<br />\r\n                        # 110 <br />\r\n                        details: 10d6++7<br />\r\n                        1(+7) 3(+7) 3(+7) 2(+7) 4(+7) 5(+7) 6(+7) 1(+7) 1(+7) 3(+7)\r\n                    </code>\r\n                </pre>\r\n            </p>\r\n        </main>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function PathFinder() {\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>What is Pathfinding Visualizer?</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                This Pathfinding Visualizer allows the user to select a Start node and an End node from a grid. \r\n                The User can also create walls or obstacles for the pathfinder to navigate around. The application \r\n                was developed using Python and the Pygame module. \r\n            </p>\r\n            <header className=\"head\">\r\n                <h1>How do you use it?</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                To begin using the application, simply download and unzip the file from my <a href=\"https://github.com/TreyPhillip/PathfindingVisualizer\">GitHub</a>. \r\n                The python file is packaged with a .exe file so you do not need to download anything other than the GitHub zip in order \r\n                to use it. Navigate to the unzipped Pathfinding Visualizer folder and into dist then PathfindingVisualizer. \r\n                Finally locate the PathfindingVisualizer.exe file and double click to run. Instructions for use will be \r\n                along the top of the window.\r\n            </p>\r\n        </main>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function PathFinder() {\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>My Portfolio</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                I built this portfolio as a small demonstration of my knowledge in Web Design, \r\n                JavaScript and React.js. Its also used as a platform to display information about \r\n                the other projects I have worked on\r\n            </p>\r\n            <header className=\"head\">\r\n                <h1>How was it built?</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                The app is currently just a React.js app hosted on GitHub Pages, but I have \r\n                plans to add some features that will may require a backend (most likely Node.js).\r\n                Some examples of those featutes include a Blog, comment system and a simple \r\n                authentication with google or another third party system to make those comments.\r\n            </p>\r\n        </main>\r\n        );\r\n    }","import React from 'react';\r\n\r\nexport default function Services() {\r\n    return (\r\n        <main>\r\n            <header className=\"head\">\r\n                <h1>Services</h1>\r\n            </header>\r\n            <p className=\"block\">\r\n                I offer a variety of services from Websites, Applications,\r\n                and Computer Builds. I dont have any set prices, so contact\r\n                me and we can discuss the price. Look below for more details.\r\n            </p>\r\n            <header className=\"head\">\r\n                <h2>Websites</h2>\r\n            </header>\r\n            <p className=\"block\">\r\n                I primarily work with React.js and Node.js for websites, \r\n                using Passport.js for authentication. I am also planning \r\n                on learning Wordpress and some other Web Dev Technologies.\r\n            </p>\r\n            <header className=\"head\">\r\n                <h2>Applications</h2>\r\n            </header>\r\n            <p className=\"block\">\r\n                For application development I am fairly well versed in a\r\n                variety of programming languages such as JavaScript, \r\n                C Sharp, Python, and a little Java.\r\n            </p>\r\n            <header className=\"head\">\r\n                <h2>Computer Builds</h2>\r\n            </header>\r\n            <p className=\"block\">\r\n                I have a few years of experience in computer assembly and \r\n                repair, so if you are looking to buld a PC (gaming or work)\r\n                then get in touch and we can discuss it\r\n            </p>\r\n            <header className=\"head\">\r\n                <h2>Other</h2>\r\n            </header>\r\n            <p className=\"block\">\r\n                If you are looking for something that I dont have listed here,\r\n                contact me and I may be able to help.\r\n            </p>\r\n        </main>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport { Route, HashRouter, Switch } from 'react-router-dom';\r\nimport './styles/App.scss';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Home from './components/Home/Home';\r\nimport Projects from './components/Projects/Projects';\r\nimport About from './components/About/About';\r\nimport Contact from './components/Contact/Contact';\r\nimport DiceBot from './components/Projects/ProjectDetail/DiceBot/DiceBot';\r\nimport Pathfinder from './components/Projects/ProjectDetail/Pathfinder/Pathfinder';\r\nimport Portfolio from './components/Projects/ProjectDetail/Portfolio/Portfolio';\r\nimport Services from './components/Services/Services';\r\nimport { Helmet } from 'react-helmet';\r\nimport { FaBars } from 'react-icons/fa';\r\n\r\nexport default function App() {\r\n  const [toggled, setToggled] = useState(false);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const handleToggleSidebarMobile = (value) => {\r\n    setToggled(!value);\r\n    setCollapsed(toggled);\r\n  }\r\n\r\n  return (\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <div className={`app ${toggled ? 'toggled' : ''}`}>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Trey Phillip | Junior Developer</title>\r\n          <link rel=\"canonical\" href=\"https://treyphillip.github.io\" />\r\n          <meta name=\"description\" content=\"Trey Phillip's Portfolio, \r\n            a Website that delivers information on him as well as the services\r\n            he provides, such as Website development or Custom Computer Builds\" />\r\n        </Helmet>    \r\n          <Sidebar\r\n            toggled={toggled}\r\n            collapsed={collapsed}\r\n            handleToggleSidebar={handleToggleSidebarMobile}\r\n          /> \r\n          <main>\r\n            <div className=\"btn-toggle\" onClick={() => handleToggleSidebarMobile(toggled)}>\r\n              <FaBars />\r\n            </div>          \r\n            <Switch>\r\n                <Route path=\"/Home\" component={Home}/>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/Projects\" component={Projects} />\r\n                <Route path=\"/About\" component={About} />\r\n                <Route path=\"/Contact\" component={Contact} />\r\n                <Route path=\"/Projects/DiceBot\" component={DiceBot} />\r\n                <Route path=\"/Projects/Pathfinder\" component={Pathfinder} />\r\n                <Route path=\"/Projects/Portfolio\" component={Portfolio} />\r\n                <Route path=\"/Contact\" component={Contact} />\r\n                <Route path=\"/Services\" component={Services} />\r\n            </Switch>\r\n          </main>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
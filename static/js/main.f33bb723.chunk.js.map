{"version":3,"sources":["components/images/VisualizerImage1.jpg","components/images/DiceImage1.jpg","components/images/PortfolioImage1.jpg","components/Sidebar/Sidebar.js","components/Home/Home.js","components/Projects/ProjectCard/ProjectCard.js","components/Projects/ProjectList/ProjectList.js","components/Projects/Projects.js","components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","props","state","collapsed","toggled","className","this","breakPoint","onToggle","handleToggleSidebar","onClick","style","padding","textTransform","fontWeight","fontSize","letterSpacing","overflow","textOverflow","whiteSpace","iconShape","icon","to","Component","Home","useStyles","makeStyles","theme","root","maxWidth","minHeight","backgroundColor","media","height","control","spacing","ProjectCard","classes","Card","CardActionArea","CardMedia","component","image","project","title","CardContent","Typography","gutterBottom","variant","color","description","CardActions","href","github","rel","target","Button","size","label","withWidth","screenWidth","cols","width","isWidthUp","Container","GridList","cellHeight","map","GridListTile","fullWidth","key","projectid","Projects","projects","VisualizerImage1","DiceImage1","PortfolioImage1","About","App","value","setState","handleToggleSidebarMobile","bind","document","basename","process","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f33bb723.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VisualizerImage1.cb9e75f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DiceImage1.34884678.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PortfolioImage1.a0348c00.jpg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    ProSidebar,\r\n    Menu,\r\n    MenuItem,\r\n    SidebarHeader,\r\n    SidebarContent,\r\n} from 'react-pro-sidebar';\r\nimport { FaWrench, FaBars, FaInfo, FaHome, FaEnvelope } from 'react-icons/fa';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        collapsed: this.props.collapsed,\r\n        toggled: this.props.toggled,\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`app  ${this.state.toggled ? 'toggled' : ''}`}>\r\n            <ProSidebar\r\n                collapsed={this.props.collapsed}\r\n                toggled={this.props.toggled}\r\n                breakPoint=\"md\"\r\n                onToggle={this.props.handleToggleSidebar}\r\n            >\r\n                <SidebarHeader onClick={() => this.props.handleToggleSidebar(this.props.toggled)}>\r\n                <div\r\n                    style={{\r\n                    padding: '30px',\r\n                    textTransform: 'uppercase',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 14,\r\n                    letterSpacing: '1px',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    whiteSpace: 'nowrap',\r\n                    }}>\r\n                    <FaBars onClick={() => this.props.handleToggleSidebar(true)} />\r\n                </div>\r\n                </SidebarHeader>\r\n                    <SidebarContent>\r\n                        <Menu iconShape=\"circle\">\r\n                            <MenuItem icon={<FaHome />}>\r\n                                Home\r\n                                <Link to=\"/\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaInfo />}> \r\n                                About me\r\n                                <Link to=\"/About\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaWrench />}> \r\n                                Projects\r\n                                <Link to=\"/Projects\"></Link>\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FaEnvelope />}> \r\n                                Contact\r\n                                <Link to=\"/Contact\"></Link>\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </SidebarContent>             \r\n                </ProSidebar>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <header className=\"intro\">\r\n                    <h1>Hi, I'm Trey. A junior developer</h1>\r\n                </header>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles ((theme)=> ({\r\n  root: {\r\n    maxWidth: 375,\r\n    minHeight: 375,\r\n    backgroundColor: \"white\"\r\n  },\r\n  media: {\r\n    height: 340,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport function ProjectCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"150\"\r\n            image={props.project.image}\r\n            title=\"Visualizer\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {props.project.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.project.description}                 \r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n        <a href={props.project.github} rel=\"noopener noreferrer\" target=\"_blank\">         \r\n          <Button size=\"small\" color=\"primary\" label=\"GitHub\">\r\n            GitHub\r\n          </Button>\r\n        </a>\r\n        </CardActions>\r\n      </Card>\r\n  );\r\n}\r\n\r\nexport default ProjectCard","import React from 'react';\r\nimport {ProjectCard}  from '../ProjectCard/ProjectCard';\r\nimport { Container } from \"reactstrap\";\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\n\r\nconst ProjectList = props => {\r\n    function getCols(screenWidth) {\r\n        if (isWidthUp('xl', screenWidth)) {\r\n            return 5;\r\n        }\r\n        if (isWidthUp('lg', screenWidth)) {\r\n            return 4;\r\n        }\r\n        if (isWidthUp('md', screenWidth)) {\r\n            return 3;\r\n        }\r\n        if (isWidthUp('sm', screenWidth)) {\r\n            return 2;\r\n        }\r\n        if (isWidthUp('xs', screenWidth)) {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    const cols = getCols(props.width);\r\n    return(\r\n        <div>\r\n            <Container className=\"project-list\">\r\n                <GridList cellHeight={460} cols={cols} spacing={15}>\r\n                    {props.project.map((project) => \r\n                    <GridListTile fullWidth={true} className=\"project-tile\">\r\n                        <ProjectCard key={project.projectid} project={project} />\r\n                    </GridListTile>          \r\n                    )} \r\n                </GridList>\r\n            </Container> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withWidth()(ProjectList)","import React, { Component } from 'react';\r\nimport ProjectList from './ProjectList/ProjectList';\r\nimport VisualizerImage1 from '../images/VisualizerImage1.jpg';\r\nimport DiceImage1 from '../images/DiceImage1.jpg';\r\nimport PortfolioImage1 from '../images/PortfolioImage1.jpg';\r\n\r\nclass Projects extends Component {   \r\n    constructor() {\r\n        const DiceDescription = 'Discord bot developed using JavaScript and the Discord.js node module';\r\n        const PathfindingDescription = 'Pathfinding Visualizer in Python using the A* algorithm';\r\n        const PortfolioDescription = 'A website that acts as my portfolio. The website you\\'re on right now!';\r\n        super();\r\n        this.state = {\r\n            projects: [\r\n                {projectid: '1', title: 'Path-finding Visualizer', description: PathfindingDescription, image: VisualizerImage1, github: 'https://github.com/TreyPhillip/PathfindingVisualizer'},\r\n                {projectid: '2', title: 'MrDiceGuy', description: DiceDescription, image: DiceImage1, github: 'https://github.com/TreyPhillip/MrDiceGuy'},\r\n                {projectid: '3', title: 'My Porfolio', description: PortfolioDescription, image: PortfolioImage1, github: 'https://github.com/TreyPhillip/TreyPhillip.github.io'},\r\n            ]\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <main>\r\n                    <header className=\"head\">\r\n                        <h1>My Projects</h1>\r\n                    </header>\r\n                </main>\r\n                    <ProjectList project={this.state.projects} />               \r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <header className=\"head\">\r\n                    <h1>About Me</h1>\r\n                </header>\r\n                <p className=\"block\">\r\n                    I live in Ontario, Canada and I recently graduated from Conestoga College\r\n                    with an Ontario College Advanced Diploma in Computer Science & IT. Since \r\n                    my graduation I have spent my time learning new technologies and enjoying \r\n                    my hobbies.\r\n                </p>\r\n                <header className=\"head\">\r\n                    <h2>Education</h2>\r\n                </header>\r\n                <p className=\"block\">\r\n                    My education focused on hands on work with a variety of languages and frameworks.\r\n                    Most of my classes focused on C# and the .NET Framework, but I also had classes \r\n                    on other languages or concepts like JavaScript, Java, Web Design, and Database design.\r\n                </p>\r\n                <header className=\"head\">\r\n                    <h2>Skills</h2>\r\n                </header>\r\n                <p className=\"block\">\r\n                    My strongest skills are in C# and JavaScript. I have \r\n                    personal experience but no professional experience in \r\n                    Web Design and Application Design in these languages \r\n                    and several other like Python, Java, HTML & CSS. I am \r\n                    also proficient in Databasing languages like SQL and \r\n                    PostgreSQL\r\n                </p>\r\n            </main>\r\n        );\r\n    };\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport './styles/App.scss';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Home from './components/Home/Home';\nimport Projects from './components/Projects/Projects';\nimport About from './components/About/About';\nimport { FaBars } from 'react-icons/fa';\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = {\n        collapsed: true,\n        toggled: false,\n      };\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n    document.title = 'Trey Phillip | Junior Developer';\n  }\n\n  handleToggleSidebar = (value) => {\n    this.setState({\n        toggled: !value,\n        collapsed: this.state.toggled\n    });\n  }\n\n  handleToggleSidebarMobile = (value) => {\n    this.setState({\n        toggled: !value,\n        collapsed: true\n    });\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className={`app ${this.state.toggled ? 'toggled' : ''}`}>        \n            <Sidebar\n              toggled={this.state.toggled}\n              collapsed={this.state.collapsed}\n              handleToggleSidebar={this.handleToggleSidebar}\n            /> \n            <main>\n              <div className=\"btn-toggle\" onClick={() => this.handleToggleSidebarMobile(this.state.toggled)}>\n                <FaBars />\n              </div>          \n              <Switch>     \n                  <Route path=\"/Home\" component={Home}/>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route path=\"/Projects\" component={Projects} />\n                  <Route path=\"/About\" component={About} />\n              </Switch>\n            </main>\n        </div>\n      </BrowserRouter>\n    );\n  } this\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}